/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile {
  version 2.0;
  format ascii;
  class dictionary;
  object blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
  (0 0 0) // 0
  (0.2 0 0) // 1
  (0.2 0.1 0) // 2
  (0 0.1 0) // 3

  (0 0 0.002) // 4
  (0.2 0 0.002) // 5
  (0.2 0.1 0.002) // 6
  (0 0.1 0.002) // 7

  (0.25 0 0) // 8
  (0.25 0.1 0) // 9

  (0.25 0 0.002) // 10
  (0.25 0.1 0.002) // 11

  (-.05 0 0) // 12
  (-.05 0.1 0) // 13

  (-.05 0.1 0.002) // 14
  (-.05 0 0.002) // 15
);

blocks
(
  hex (12 0 3 13 15 4 7 14) (21 161 1)
    simpleGrading
    (
      0.1
      (
        (0.3 0.3 8)
        (0.3 0.3 0.125)
      )
      1
    )
  hex (0 1 2 3 4 5 6 7) (161 161 1)
    simpleGrading
    (
      (
        (0.2 0.2 5)
        (0.2 0.2 0.2)
      )
      (
        (0.3 0.3 8)
        (0.3 0.3 0.125)
      )
      1
    )
  hex (1 8 9 2 5 10 11 6) (21 161 1)
    simpleGrading
    (
      10
      (
        (0.3 0.3 8)
        (0.3 0.3 0.125)
      )
      1
    )
);

edges
(

);

boundary
(

  inlet
  {
    type patch;
    faces
    (
      (12 13 14 15)
    );
  }

  outlet
  {
    type patch;
    faces
    (
      (8 10 11 9)
    );
  }

  // default walls
  non_interface_walls
  {
    type wall;
    faces
    (
      (2 6 7 3)
      (2 9 11 6)
      (1 5 10 8)
    );
  }

  interface
  {
    type wall;
    faces
    (
      (4 0 1 5)
    );
  }

  // symm patches
  symm_parts3
  {
    type symmetryPlane;
    faces
    (
      (13 3 7 14)
    );
  }
  symm_parts4
  {
    type symmetryPlane;
    faces
    (
      (15 12 0 4)
    );
  }

);

mergePatchPairs
(

);

// ************************************************************************* //
